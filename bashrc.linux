# mapping names to color escape sequences, taken from
# http://wiki.archlinux.org/index.php/Color_Bash_Prompt
txtblk='\e[0;30m' # Black - Regular
txtred='\e[0;31m' # Red
txtgrn='\e[0;32m' # Green
txtylw='\e[0;33m' # Yellow
txtblu='\e[0;34m' # Blue
txtpur='\e[0;35m' # Purple
txtcyn='\e[0;36m' # Cyan
txtwht='\e[0;37m' # White
bldblk='\e[1;30m' # Black - Bold
bldred='\e[1;31m' # Red
bldgrn='\e[1;32m' # Green
bldylw='\e[1;33m' # Yellow
bldblu='\e[1;34m' # Blue
bldpur='\e[1;35m' # Purple
bldcyn='\e[1;36m' # Cyan
bldwht='\e[1;37m' # White
unkblk='\e[4;30m' # Black - Underline
undred='\e[4;31m' # Red
undgrn='\e[4;32m' # Green
undylw='\e[4;33m' # Yellow
undblu='\e[4;34m' # Blue
undpur='\e[4;35m' # Purple
undcyn='\e[4;36m' # Cyan
undwht='\e[4;37m' # White
bakblk='\e[40m'   # Black - Background
bakred='\e[41m'   # Red
badgrn='\e[42m'   # Green
bakylw='\e[43m'   # Yellow
bakblu='\e[44m'   # Blue
bakpur='\e[45m'   # Purple
bakcyn='\e[46m'   # Cyan
bakwht='\e[47m'   # White
txtrst='\e[0m'    # Text Reset

# All non-printing characters are enclosed in \[ and \] to make sure long lines don't
# wrap all weird and on the same line.  See link immediately below
# http://tldp.org/HOWTO/Bash-Prompt-HOWTO/nonprintingchars.html
#export PS1="\[${txtred}\][\[${bldwht}\]\u@\h \[${bldblk}\]\w\[${txtred}\]]\[${txtrst}\]\$ "
export PS1='[\u@\h \w]\$ '

# Hack to work around the fact that gnome-terminal always sets TERM=xterm
if [[ "${TERM}" == "xterm" && "${COLORTERM}" == "gnome-terminal" ]]
then
	export TERM=xterm-256color
fi

# Set directory listing colors to those listed in ~/.dircolors
if [ -r ~/.dircolors ]
then
	alias ls='ls --color=auto'
	eval "$(dircolors ~/.dircolors)"
fi

# URxvt specific setting of font size.  See urxvt(1)
if [[ "${TERM}" =~ rxvt-unicode.* ]]
then
	function fnsz {
		printf '\e]710;xft:Monaco:pixelsize=%s\007' ${1}
	}
fi

if [[ "${TERM}" =~ xterm.* ]]
then
	function xterm-colorscheme {
		local filename="${1}"
		declare -A defines

		cat "${filename}" | while read line
		do
			if [[ "${line}" =~ ^#define ]]
			then
				read _ key value <<< "${line}"
				defines[${key}]=${value}
				continue
			elif [[ "${line}" =~ ^(XTerm|\*) ]]
			then
				read key value <<< "${line}"
				if [[ "${key}" =~ foreground:$ ]]
				then
					op="10"
				elif [[ "${key}" =~ background:$ ]]
				then
					op="11"
				elif [[ "${key}" =~ color[0-9]+:$ ]]
				then
					color=$(echo "${key}" | sed -e 's/^.*color\([0-9][0-9]*\).*$/\1/')
					op="4;${color}"
				else
					continue
				fi

				if [[ -n "${defines[${value}]}" ]]
				then
					what="${defines[$value]}"
				else
					what="${value}"
				fi
				printf "\033]%s;%s\007" "${op}" "${what}"

			else
				true
			fi
		done
	}
fi

# 2012-10-24: convient alias for other ps invocations
alias pse='ps -eo pid,ppid,tid,class,rtprio,ni,pri,vsz,rss,psr,pcpu,stat,wchan:25,args'
